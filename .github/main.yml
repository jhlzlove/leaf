name: Java CI with Maven

on:
  push:
    # 分支
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  compile:
    runs-on: ubuntu-latest
    name: Running Java ${{ matrix.java }} compile
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: 缓存 Maven 依赖
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: 编译代码
        run: mvn compile
      - name: Deploy the JAR file to the remote server
        uses: actions/checkout@v2
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Generate the package
        run: mvn -B package --file pom.xml -Dmaven.test.skip=true
      # 通过他人写好的 scp 脚本把 action 打好的 jar 包传输到自己的服务器上
      - name: 将 JAR 包部署到服务器
        uses: garygrossgarten/github-action-scp@release
        with:
          local: target/github-admin.jar
          remote: projects/actions/market-admin.jar
          host: ${{ secrets.HOST }}
          username: ${{ secrets.SSH_USER }}
          password: ${{ secrets.SSH_PASSWORD }}
      - name: 在服务器上执行 java -jar，请确保服务器安装了 JDK
        if: always()
        uses: fifsky/ssh-action@master
        with:
          command: |
            cd projects/actions/ && nohup java -jar market-actions-springboot.jar &
          host: ${{ secrets.HOST }}
          user: ${{ secrets.SSH_USER }}
          pass: ${{ secrets.SSH_PASSWORD }}
          args: "-tt"