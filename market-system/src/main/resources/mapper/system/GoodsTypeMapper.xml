<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.market.system.mapper.GoodsTypeMapper">
    
    <resultMap type="GoodsType" id="GoodsTypeResult">
        <result property="id"    column="id"    />
        <result property="typeName"    column="type_name"    />
        <result property="pCode"    column="p_code"    />
        <result property="typeCode"    column="type_code"    />
    </resultMap>

    <sql id="selectGoodsTypeVo">
        select id, type_name, p_code, type_code from t_goods_type
    </sql>

    <select id="selectGoodsTypeList" parameterType="GoodsType" resultMap="GoodsTypeResult">
        <include refid="selectGoodsTypeVo"/>
        <where>  
            <if test="typeName != null  and typeName != ''"> and type_name like concat('%', #{typeName}, '%')</if>
            <if test="pCode != null  and pCode != ''"> and p_code = #{pCode}</if>
            <if test="typeCode != null  and typeCode != ''"> and type_code = #{typeCode}</if>
        </where>
    </select>
    
    <select id="selectGoodsTypeById" parameterType="Long" resultMap="GoodsTypeResult">
        <include refid="selectGoodsTypeVo"/>
        where id = #{id}
    </select>
        
    <insert id="insertGoodsType" parameterType="GoodsType" useGeneratedKeys="true" keyProperty="id">
        insert into t_goods_type
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="typeName != null">type_name,</if>
            <if test="pCode != null">p_code,</if>
            <if test="typeCode != null">type_code,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="typeName != null">#{typeName},</if>
            <if test="pCode != null">#{pCode},</if>
            <if test="typeCode != null">#{typeCode},</if>
         </trim>
    </insert>

    <update id="updateGoodsType" parameterType="GoodsType">
        update t_goods_type
        <trim prefix="SET" suffixOverrides=",">
            <if test="typeName != null">type_name = #{typeName},</if>
            <if test="pCode != null">p_code = #{pCode},</if>
            <if test="typeCode != null">type_code = #{typeCode},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteGoodsTypeById" parameterType="Long">
        delete from t_goods_type where id = #{id}
    </delete>

    <delete id="deleteGoodsTypeByIds" parameterType="String">
        delete from t_goods_type where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
</mapper>