plugins {
    // Java 插件
    id 'java'
    // spring boot version control
    id 'org.springframework.boot' version '3.1.2'
    // 该插件用于管理 Spring Boot 项目中依赖项的版本。
    // 它是 Spring Boot 官方提供的 Gradle 插件之一，可以帮助开发人员更轻松地管理项目依赖项。
    // 该插件的作用是统一管理项目依赖项的版本，使项目的依赖项版本更加清晰明确，避免出现依赖冲突。
    id 'io.spring.dependency-management' version '1.1.2'
}

group 'com.leaf'
version '0.0.1'

// 配置字符编码，该配置和 allprojects 的 compileJava 作用一样，该配置对所有子项目都生效，配置方式二选一
// tasks.withType(JavaCompile).configureEach {
//    options.encoding = 'UTF-8'
//}


// 配置所有项目（包括子项目，拥有最高优先级），所有子项目继承相同的配置。
allprojects {
    // 指定所有项目使用的插件
    apply plugin: 'java'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    // 指定所有项目的 Java 版本
    java {
        sourceCompatibility = JavaVersion.VERSION_17
        targetCompatibility = JavaVersion.VERSION_17
    }
    // 指定编译文件的字符编码
    compileJava {
        options.encoding = "UTF-8"
    }

    // 依赖下载源设置
    repositories {
        // 本地 maven 仓库
        mavenLocal()
        // 阿里云仓库
        maven { url 'https://maven.aliyun.com/repository/public/' }
        maven { url 'https://maven.aliyun.com/repository/spring/' }
        // 如果项目中需要从 http 下载依赖，打开下面的设置
        // allowInsecureProtocol = true
        // maven { url 'http://maven.nexus.com/xxxx'}
        // maven 仓库
        mavenCentral()
    }

    // 依赖
    dependencies {
        /* spring security */
        implementation('org.springframework.boot:spring-boot-starter-security')
        /* spring web */
        implementation('org.springframework.boot:spring-boot-starter-web')
        /* spring aop */
        implementation('org.springframework.boot:spring-boot-starter-aop')
        /* spring data jpa */
        implementation('org.springframework.boot:spring-boot-starter-data-jpa')
        /* validation */
        implementation('org.springframework.boot:spring-boot-starter-validation')
        /* postgresql */
        implementation('org.postgresql:postgresql:42.6.0')
        /* java jwt */
        // https://github.com/auth0/java-jwt
        implementation 'com.auth0:java-jwt:4.4.0'
        /* 缩略图 */
        implementation 'net.coobird:thumbnailator:0.4.19'

        testImplementation 'org.springframework.boot:spring-boot-starter-test'
    }
}

// 子工程配置
subprojects {
    // 为什么为空？因为目前这是一个单模块项目
    // 如果喜欢，想要多模块开发，自行配置即可
    // -------------- 题外话 -------------------
    // 多模块开发，我很讨厌，找个东西都要扒拉半天，得亏 idea 智能，双击 Shift 天下无敌，让文件无处可逃。
    // 但是打开的文件树还是很恶心。
    // 单模块分包开发，可以；微服务采用多模块开发，没问题！
    // 不采用微服务，多模块开发？！Oh my god，浪子很难受
}

