import{_ as e,c as t,o as i,ag as d}from"./chunks/framework.DuIra3uW.js";const u=JSON.parse('{"title":"启动项目","description":"","frontmatter":{},"headers":[],"relativePath":"guide/2-build.md","filePath":"guide/2-build.md","lastUpdated":1732253996000}'),l={name:"guide/2-build.md"};function r(s,a,o,n,c,h){return i(),t("div",null,a[0]||(a[0]=[d('<h1 id="启动项目" tabindex="-1">启动项目 <a class="header-anchor" href="#启动项目" aria-label="Permalink to &quot;启动项目&quot;">​</a></h1><p>本章节写了如何启动项目，但是不会手把手教环境搭建，只会点一下 <a href="https://gradle.org/" target="_blank" rel="noreferrer">Gradle</a> 的配置。可以参考这篇<a href="https://jhlzlove.github.io/wiki/%E7%BC%96%E7%A8%8B%E5%90%8E%E8%8A%B1%E5%9B%AD/Java/%E9%9A%8F%E7%AC%94/Gradle.html" target="_blank" rel="noreferrer">文章</a>。另外，version catalog 定义的依赖只有使用的时候才会下载（延迟加载/懒加载）。</p><h2 id="一、后端" tabindex="-1">一、后端 <a class="header-anchor" href="#一、后端" aria-label="Permalink to &quot;一、后端&quot;">​</a></h2><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-VcTQv" id="tab-Xno8d6c" checked><label data-title="学习或使用" for="tab-Xno8d6c">学习或使用</label><input type="radio" name="group-VcTQv" id="tab-2ZqNA7B"><label data-title="参与完善和开发" for="tab-2ZqNA7B">参与完善和开发</label></div><div class="blocks"><div class="language-bash vp-adaptive-theme active line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --depth</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://github.com/jhlzlove/leaf.git</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://github.com/jhlzlove/leaf.git</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div></div></div><p>使用你喜欢的 IDE 打开该项目，修改 <code>leaf/leaf-system/src/main/resources/application-dev.yml</code> 配置文件的内容，确保连接信息和自己连接的目标信息一致。</p><ul><li>application-dev.yml：开发环境配置</li><li>application-prod.yml：生产环境配置</li></ul><p>如果过程中下载依赖错误，可以尝试以下方式：</p><ol><li><code>./gradlew --refresh-dependencies</code> 或者 <code>./gradlew -U</code>；</li><li><code>./gradlew --stop</code>，然后删除 <code>~/.gradle/caches</code> 目录重新构建项目。如果定义了 <code>GRADLE_USER_HOME</code> 则删除该目录中的 <strong>caches</strong> 目录。</li></ol><h2 id="二、前端" tabindex="-1">二、前端 <a class="header-anchor" href="#二、前端" aria-label="Permalink to &quot;二、前端&quot;">​</a></h2><p>暂时还没有哦~</p><h2 id="三、项目结构" tabindex="-1">三、项目结构 <a class="header-anchor" href="#三、项目结构" aria-label="Permalink to &quot;三、项目结构&quot;">​</a></h2><h3 id="后端" tabindex="-1">后端 <a class="header-anchor" href="#后端" aria-label="Permalink to &quot;后端&quot;">​</a></h3><p>common 模块单独引入 jackson 并基于 jackson 封装 JSON 工具并定义结构化客户端响应。这样不使用可以直接移除，使用的话直接引入即可，本项目的 common 模块主要引入一些外部工具，轻度封装，便于修改、移除。</p><p>另一方面，common 中尽量限制依赖传递：即其它模块中没有直接使用或者没有意向直接使用的依赖一律使用 <code>implementation</code> 而不是 <code>api</code>。</p><h2 id="四、代码规范" tabindex="-1">四、代码规范 <a class="header-anchor" href="#四、代码规范" aria-label="Permalink to &quot;四、代码规范&quot;">​</a></h2><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>代码规范可以帮助开发人员更好地理解和阅读代码，提高代码的可读性，并降低出现错误的概率。</p><p>同时，它还有助于提高代码的可维护性，使得其他开发人员能够轻松地理解和修改代码，而不需要花费大量时间去弄清楚代码的意图和逻辑。</p><p>不同的团队会有不同的规范，适合团队的、团队成员共同遵守的就是最好的！</p></div><p>本项目的代码规范如下：</p><h3 id="注释" tabindex="-1">注释 <a class="header-anchor" href="#注释" aria-label="Permalink to &quot;注释&quot;">​</a></h3><p>真正好的注释是想办法不写注释。所以方法名最好见名知意，内部逻辑保持简单，非常考验程序员的水平。 注释只应该描述有关代码和设计的技术性信息，而不是通篇大论。</p><div class="note custom-block github-alert"><p class="custom-block-title">NOTE</p><p>Java 中有自己特殊的注释，可以使用 <code>javadoc</code> 命令生成为 JavaDoc API 文档，i think you need read it: <a href="https://www.geeksforgeeks.org/comments-in-java/" target="_blank" rel="noreferrer">https://www.geeksforgeeks.org/comments-in-java/</a>。</p></div><h3 id="编码及缩进" tabindex="-1">编码及缩进 <a class="header-anchor" href="#编码及缩进" aria-label="Permalink to &quot;编码及缩进&quot;">​</a></h3><p>一律使用 <code>UTF-8</code> 编码和 4 空格缩进。</p><h3 id="业务函数参数" tabindex="-1">业务函数参数 <a class="header-anchor" href="#业务函数参数" aria-label="Permalink to &quot;业务函数参数&quot;">​</a></h3><p>如果业务中函数的参数有三个以上，全部封装为类入参。</p><h3 id="代码行长度限制-120" tabindex="-1">代码行长度限制：120 <a class="header-anchor" href="#代码行长度限制-120" aria-label="Permalink to &quot;代码行长度限制：120&quot;">​</a></h3><p>每一行的长度在 120 个字符左右，如果超过必须换行。一般来说，常见的有 80、100、120。</p><div class="note custom-block github-alert"><p class="custom-block-title">NOTE</p><p>IDEA 等常用 IDE 中含有分割线提示，非常方便！</p></div><h3 id="包装类与基本类型" tabindex="-1">包装类与基本类型 <a class="header-anchor" href="#包装类与基本类型" aria-label="Permalink to &quot;包装类与基本类型&quot;">​</a></h3><p>实体、收参、出参使用包装类，如果要严格控制不可空，还是推荐使用基础类型，尽早的暴露错误，可以编写健壮的代码的同时，也有利于团队的摸鱼和提升工作技能。局部变量尽量使用基础类型。</p><h3 id="命名" tabindex="-1">命名 <a class="header-anchor" href="#命名" aria-label="Permalink to &quot;命名&quot;">​</a></h3><ol><li>包名全部小写，如果有多个单词连着写，比如：<code>com.example.deepspace</code>；</li><li>类名遵循 UpperCamelCase 风格；</li><li>方法名都遵循 lowerCamelCase 风格；</li><li>常量名全部大写，多个单词使用下划线分割；非常量遵循 lowerCamelCase 风格命名；</li><li>尽量不要使用拼音命名；</li></ol><h3 id="全部使用-jsr310-日期" tabindex="-1">全部使用 jsr310 日期 <a class="header-anchor" href="#全部使用-jsr310-日期" aria-label="Permalink to &quot;全部使用 jsr310 日期&quot;">​</a></h3><p>项目强制使用 LocalDate、LocalDateTime 等 java8 之后提供的新式 API。</p><h3 id="curd" tabindex="-1">CURD <a class="header-anchor" href="#curd" aria-label="Permalink to &quot;CURD&quot;">​</a></h3><p>非强制，只是建议，根据实际情况确定是否使用。</p><table tabindex="0"><thead><tr><th>prefix</th><th>meaning</th></tr></thead><tbody><tr><td>add、insert、create</td><td>新增</td></tr><tr><td>update、up、modify、edit</td><td>更新</td></tr><tr><td>remove、rm</td><td>逻辑删除(非永久删除)</td></tr><tr><td>delete、del</td><td>物理删除(永久删除)</td></tr><tr><td>select、find、get</td><td>单记录查询</td></tr><tr><td>list</td><td>多记录/列表查询</td></tr><tr><td>page</td><td>分页查询</td></tr><tr><td>import</td><td>导入</td></tr><tr><td>export</td><td>导出</td></tr><tr><td>upload</td><td>上传</td></tr><tr><td>download</td><td>下载</td></tr></tbody></table>',36)]))}const b=e(l,[["render",r]]);export{u as __pageData,b as default};
