############################# 端口号 #############################
server:
  port: 7777

############################# Spring 相关 #############################
spring:
  application:
    # 应用名称
    name: leaf-example-boot3
  # SpringBoot2.x 版本是 servlet，2.x 之前是 http
  servlet:
    multipart:
      # 一次请求中单个文件最大大小
      max-file-size: 10MB
      # 一次请求所有文件大小的和
      max-request-size: 20MB
  # 数据源
  datasource:
    # hikari 连接池
    type: com.zaxxer.hikari.HikariDataSource
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://localhost:5432/leaf?serverTimezone=Asia/Shanghai
    hikari:
      username: postgres
      password: postgres
      # 最大连接池数量
      maximum-pool-size: 20
      # 配置一个连接在池中最大生存的时间，单位是毫秒
      max-lifetime: 60000
      # 存活时间
      keepalive-time: 6000
  # jpa 配置
  jpa:
    # 显示 SQL
    show-sql: true
    hibernate:
      generate_statistics: true
      # 命名策略
      naming:
        # 相当于 org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy（3.0删除）
        # 驼峰与下划线映射
        physical-strategy: org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy
    # jpa 属性配置
    properties:
      hibernate:
        # 格式化控制台打印的 SQL
        format_sql: true
    open-in-view: false
#        jdbc:
#          batch_size: 50
#        # 检测批处理是否打开 它可能不生效
#        generate_statistics: true

# Spring 日志级别，默认为 info 级别
logging:
  level:
    # 指定 repository 包内的日志级别
    com.leaf.system.repository: debug
    # SQL 语句显示参数
    org.hibernate.stat: debug
    org.hibernate.sql: debug


############################# 项目自定义配置 #############################
leaf:
  # version
  version: v1.0.0
  # header tag：默认 Authorization 可以改为 token 以及其它自己喜欢的标识,重要的是前后端统一
  header: Authorization
  api-prefix: api
